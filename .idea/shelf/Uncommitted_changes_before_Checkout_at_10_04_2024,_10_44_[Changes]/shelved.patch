Index: index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\n\n// Array / list / массив / список\n\n// const list = new Array(); // конструктор\n// const list = []; // литеральны или просто // 99%\n// const list = [1, 2, 'jwkenew', [1, 2, ], false, {name: 'Bob'}]; // литеральны или просто // 99%\n\n// const obj = {\n//     zIndex: 6,\n//     name: 'Bob',\n//     age: 30,\n// }\n\n// obj.fewfwefwefe // undefined\n\n// obj.zIndex = 88;\n\n// const list = ['zIndex', 'name', 'age'];\n// const listIsObject = {\n//     0: 'zIndex',\n//     1: 'name',\n//     3: 'age',\n// }\n\n// console.log(list[0]);\n// console.log(listIsObject[0]);\n// console.log(obj['zIndex']); // obj.zIndex\n\n// console.log(obj, list);\n\n// const list = [1, 2, 'jwkenew', [1, 2, ], false]; // литеральны или просто // 99%\n\n// const list = ['zIndex', 'width', 'height'];\n// // list.length - 1;\n// // console.log(list[1]);\n// // console.log(list[44]); // undefined\n// // console.log(list[list.length - 1]); // получить последний элемент массива\n// // console.log(list.at(-1)); // получить последний элемент массива\n\n// // push(...items)добавляет items в конец массива. // используем как правило его\n// // pop() удаляет элемент в конце массива и возвращает его. // используем как правило его\n// // shift() удаляет элемент в начале массива и возвращает его.\n// // unshift(...items) добавляет items в начало массива.\n\n// console.log(list);\n// list.push('color'); // добавить в конец массива\n// console.log(list);\n// list.push('font-size', 'font-family');\n// console.log(list);\n\n// list.unshift('background');  // добавить в начало массива\n// console.log(list);\n\n// list.pop(); // удалить последнее занчение из массива\n// const deletedArrayItem = list.pop(); // удалить последнее занчение из массива и сохранить его в переменно deletedArrayItem\n// console.log(list);\n// console.log(list);\n\n// list.shift();  // удалить первое занчение из массива\n// const newDeletedArrayItem = list.shift(); // удалить последнее занчение из массива и сохранить его в переменно deletedArrayItem\n// console.log(list);\n\n// const list = ['zIndex', 'width', 'height']; // 6000 \n\n// list.push('font-size'); // все ок\n// list.unshift('font-size'); // ['font-size', 'zIndex', 'width', 'height'];\n\n// const userList = [\n//     {\n//         firstName: 'Anna',\n//         secondName: 'Milligan',\n//         age: 20,\n//     },\n//     {\n//         firstName: 'Igor',\n//         secondName: 'Mask',\n//         age: 43,\n//     },\n//     {\n//         firstName: 'Billi',\n//         secondName: 'Tramp',\n//         age: 16,\n//     },\n// ];\n\n// const emailsList = [];\n\n// // for (let i = 0; i < userList.length; ++i) {\n// //     console.log(userList[i]);\n// //     console.log(userList[i].toLowerCase() + '@gmail.com');\n// // }\n\n// for (let i = 0; i < userList.length; ++i) { // есть index элемента\n//     const user = userList[i];\n//     const email = `${user.firstName.toLowerCase()}${user.secondName.toLowerCase()}${user.age}@gmail.com`;\n//     emailsList.push(email);\n// }\n\n// // console.log(emailsList);\n\n// // console.log(userList);\n\n// // for(key in obj) {} //  цикл in только для ОБЪЕКТОВ!!!!!!!!!!\n// for(const key of emailsList) {\n//     console.log(key);\n// } //  цикл in только для МАССИВОВ!!!!!!!!!!\n\n// const array = [[1, 2, 3], [5, 7, 15], [22, 12, 14]];\n// console.log(array[0][1])\n\n// const cloneArray = array;\n\n// const array = ['Jon', 'Bil', 'Smit'];\n// console.log(array);\n\n// // array.splice(1, 2); // удалить из массива значение (первый аргумент - с какого индекса (1), второй аргумент - сколько значений (2))\n// // console.log(array); //['Jon'];\n\n// // array.splice(1, 2, 'Ivan', 'Evgen'); // удалить два элемента и вставить на их место еще два строковых значения\n// // console.log(array);\n\n// const newArray = array.splice(0, 2);\n\n// console.log(array);\n// console.log(newArray);\n\n// const array = ['Jon', 'Bil', 'Smit'];\n\n// console.log(array.slice(1, 2)) // скопировал от и до как и для строк\n// console.log(array.slice(-2)) // скопировал два с конца\n// console.log(array.slice(0, 3)) // скопировал 0 (включая) и до 3 (не включая)\n\n// const num_1 = [1, 2];\n// const num_2 = [3, 4];\n// const num_3 = [5, 6];\n\n// console.log(num_1.concat(num_2, num_3)); // собирает все массивы в один\n\n// const str = 'Женя-очень-любит-печенье';\n// // const splitStr = str.split(''); // создаст массив, который будет содержать каждую символ нашей строки\n// const splitStr = str.split('-'); // создаст массив, который будет содержать фрагменты строк между \"-\"\n// const result = splitStr.join(' ');\n// console.log(splitStr);\n// console.log(str.split('-').join(' '));\n\n// const userList = ['Ivan', 'Bob', 'Jon'];\n// const cloneUserList = [...userList]; // поверхностное копирование\n\n// const emailsList = [];\n\n// for (let i = 0; i < userList.length; ++i) {\n//     console.log(userList[i]);\n// }\n\n// for(const key of userList) {\n//     console.log(key);\n// }\n\n// userList.forEach((item, i) => {\n//     console.log(i);\n//     // ... какие-то действия\n//     // const user = userList[i];\n//     // const email = `${user.firstName.toLowerCase()}${user.secondName.toLowerCase()}${user.age}@gmail.com`;\n//     // emailsList.push(email);\n// });\n\n// const forEach = (item, i, array) => {\n//     console.log(item, i, array);\n// }\n\n// for (let i = 0; i < userList.length; ++i) {\n//     // forEach(userList[i], i, userList)\n// }\n\n// function getSum(argument_1, argument_2) {\n//     return argument_1 + argument_2;\n// }\n\n// const num_1 = 1;\n// const num_2 = 5;\n\n// getSum(1, 5);\n// getSum(num_1, num_2);\n\n// const userList = ['Evgen', 'Bob', 'Jon'];\n\n// const newArry = userList.map((user) => { // возвращает новый массив\n//     return `${user.toLowerCase()}@gmail.com`;\n// });\n// console.log(userList, newArry);\n\nconst numbers = [0, -1, 458, -64328254];\n\nconst isEveryItemMoreThenZero = numbers.every((item, index, array) => {\n    // if (item > 0) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n\n    // return item > 0 ? true : false;\n\n    return item > 0;\n});\n\nconsole.log(isEveryItemMoreThenZero);\n\nconst isSomeItemMoreThenZero = numbers.some((item) => {\n    return item > 0;\n});\n\nconsole.log(isSomeItemMoreThenZero);\n\n// userList.find();\n// userList.filter();\n// userList.reduce();\n// userList.includes('');\n// userList.sort();\n// userList.reverse();\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/index.js b/index.js
--- a/index.js	
+++ b/index.js	
@@ -218,3 +218,6 @@
 // userList.includes('');
 // userList.sort();
 // userList.reverse();
+
+
+
